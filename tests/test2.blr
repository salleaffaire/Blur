class bit {
   var int8 data;
}

var list{bit[32]}[32] name1;
var bit[32]           name2;
var bit[32]           name3;

class foo {
   var byte a;
   var byte b;
   var void c;
}

var list{foo}[32] array_of_foo;


func bit[32] bar(bit[32] a, bit[32] b) {
   return a*b;
}

func bit[32] foo(bit[32] n1, list{bit[32]} l1) {
   name1 = 128;
   if (((0 == 0))) {
      while (name1 != 0) {
         var void name;
         name1 = -(1 * bar(1,bar(1,bar(1,0))) / 2);
      }
      return;
   } 
   else {
      var bit[16] a;
      a = 16;
      while (a > 0) {
         a = a - 1;
      }
      if (name2 <= "name") {
         // Do something usefull
         var bit[32][128] foo_var if (name2 == 64);
         {
            foo_var = 0;
         }
      }
      break;
   } 
}
